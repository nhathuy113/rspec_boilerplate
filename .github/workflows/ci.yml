name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    needs: lint
    if: ${{ needs.lint.result == 'success' }}
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: rspec_boilerplate_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      RAILS_ENV: test
      DATABASE_HOST: 127.0.0.1
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      DATABASE_URL: mysql2://root:password@127.0.0.1:3306/rspec_boilerplate_test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2
        bundler-cache: false

    - name: Install dependencies
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3
        bundle update --bundler

    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P"3306" -u"root" -p"password" --silent; do
          echo "Waiting for MySQL..."
          sleep 1
        done

    - name: Setup Database
      run: |
        bundle exec rails db:create RAILS_ENV=test
        bundle exec rails db:schema:load RAILS_ENV=test

    - name: Create test results directory
      run: mkdir -p test_results

    - name: Run RSpec tests
      run: |
        bundle exec rspec --format progress --format RspecJunitFormatter --out test_results/rspec.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test_results/

  lint:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2
        bundler-cache: false

    - name: Install dependencies
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3

    - name: Run RuboCop
      run: bundle exec rubocop --format github
